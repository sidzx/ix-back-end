import json
import boto3
from boto3.dynamodb.conditions import Key

dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('Orders') 
def lambda_handler(event, context):
   
    headers = {
        "Access-Control-Allow-Origin": "*",
        "Access-Control-Allow-Methods": "OPTIONS,POST,GET",
        "Access-Control-Allow-Headers": "Content-Type"
    }
    
    try:
        body = json.loads(event['body'])
        order_id = body.get('orderId')
        new_status = body.get('newStatus')
        user_id=body.get('userId')
        delivery_date = body.get('deliveryDate')
        print(body)

        if not order_id or not new_status or not delivery_date:
            return {
                "statusCode": 400,
                "headers": headers,
                "body": json.dumps({"message": "Missing required fields."})
            }

        # Update the order
        response = table.update_item(
            Key={'orderId': order_id,
            'userId': user_id },
            UpdateExpression="SET order_status = :s, estimatedDelivery = :d",
            ExpressionAttributeValues={
                ':s': new_status,
                ':d': delivery_date
            },
            ReturnValues="UPDATED_NEW"
        )

        return {
            "statusCode": 200,
            "headers": headers,
            "body": json.dumps({
                "message": "Order updated successfully.",
                "updatedAttributes": response.get('Attributes')
            })
        }

    except Exception as e:
        print("Error:", str(e))
        return {
            "statusCode": 500,
            "headers": headers,
            "body": json.dumps({"message": "Internal server error."})
        }
